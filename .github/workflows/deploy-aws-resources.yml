name: Deploy AWS Resources

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: "Environment to run the workflow in"

permissions:
  id-token: write
  contents: read
  packages: read

defaults:
  run:
    working-directory: ./aws-resources

jobs:
  deploy-aws-resources:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      - name: Set up Node.js 20.x
        uses: actions/setup-node@v2.5.1
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          node-version: 20.x
          cache: "npm"
          cache-dependency-path: aws-resources/package-lock.json
          registry-url: https://npm.pkg.github.com
          scope: "@amptalk"

      - name: Install Dependencies
        run: npm ci

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.6.1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: aws-amptalk-ml-${{ inputs.environment }}-session
          aws-region: ap-northeast-1

      - name: Show Changed Files
        run: |
          echo "Changed files in this commit:"
          if ! git diff --name-only "${{ github.event.before }}" "${{ github.sha }}"; then
            echo "Error: Unable to compare commits. This may be due to not following the proper PR development workflow. Please commit to the dev branch and merge via PR into main."
            exit 1
          fi

      - name: Build TypeScript
        run: npm run build

      - name: CDK Diff
        id: cdk-diff-ap-northeast-1
        shell: bash
        run: |
          set +e
          npx cdk diff --fail --app 'npx tsx bin/aws-resources.ts'
          exit_code=$?
          if [[ $exit_code -eq 0 ]]; then
            echo "result=0" >> "$GITHUB_OUTPUT"
            echo "No changes"
          else
            echo "result=1" >> "$GITHUB_OUTPUT"
            echo "Changes detected"  
          fi

      - name: CDK Deploy
        if: ${{ steps.cdk-diff-ap-northeast-1.outputs.result == 1 }}
        shell: bash
        run: |
          echo "Starting CDK deployment..."
          npx cdk deploy \
          --app 'npx tsx bin/aws-resources.ts' \
          --all \
          --require-approval never \
          --no-role-assume
          echo "CDK deployment completed"

      - name: Check Deployment Status
        if: ${{ steps.cdk-diff-ap-northeast-1.outputs.result == 1 }}
        run: |
          echo "Checking deployment status..."
          aws cloudformation describe-stacks \
            --stack-name EvalSandboxLambda \
            --query 'Stacks[0].StackStatus' \
            --output text